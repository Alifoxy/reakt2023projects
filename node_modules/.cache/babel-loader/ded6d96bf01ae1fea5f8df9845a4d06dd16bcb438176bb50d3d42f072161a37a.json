{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getCars } from \"../../services/additionalServices/carService/getCarInfo\";\nconst initialState = {\n  cars: [],\n  errors: null,\n  loading: null,\n  updateCar: null\n};\nconst getAll = createAsyncThunk(\"carSlice/getAll\", async (_, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const {\n      data\n    } = await getCars.getAll();\n    return data;\n  } catch (error) {\n    rejectWithValue(error.response.data);\n  }\n});\nconst create = createAsyncThunk('carSlice/create', async (_ref2, thunkAPI) => {\n  let {\n    car\n  } = _ref2;\n  try {\n    await getCars.create(car);\n    thunkAPI.dispatch(getAll());\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nconst deleteById = createAsyncThunk('carSlice/deleteById', async (_ref3, thunkAPI) => {\n  let {\n    id\n  } = _ref3;\n  try {\n    await getCars.deleteById(id);\n    thunkAPI.dispatch(getAll());\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nconst updateById = createAsyncThunk('carSlice/updateById', async (_ref4, thunkAPI) => {\n  let {\n    id,\n    car\n  } = _ref4;\n  try {\n    await getCars.updateById(id, car);\n    thunkAPI.dispatch(getAll());\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nconst carSlice = createSlice({\n  name: \"carSlice\",\n  initialState,\n  reducers: {\n    set_updateCar: (state, action) => {\n      state.updateCar = action.payload;\n    }\n  },\n  extraReducers: {\n    [getAll.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = action.payload;\n    },\n    [getAll.rejected]: (state, action) => {\n      state.loading = false;\n      state.errors = action.payload;\n    },\n    [getAll.pending]: state => {\n      state.loading = true;\n    }\n  }\n});\nconst {\n  reducer: carReducer,\n  actions: {\n    set_updateCar\n  }\n} = carSlice;\nconst carActions = {\n  getAll,\n  set_updateCar,\n  create,\n  updateById,\n  deleteById\n};\nexport { carReducer, carActions };","map":{"version":3,"names":["createAsyncThunk","createSlice","getCars","initialState","cars","errors","loading","updateCar","getAll","_","rejectWithValue","data","error","response","create","thunkAPI","car","dispatch","e","deleteById","id","updateById","carSlice","name","reducers","set_updateCar","state","action","payload","extraReducers","fulfilled","posts","rejected","pending","reducer","carReducer","actions","carActions"],"sources":["C:/Users/Инна/reakt2023/src/redux/slices/car_slice.js"],"sourcesContent":["import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nimport {getCars} from \"../../services/additionalServices/carService/getCarInfo\";\r\n\r\nconst initialState = {\r\n    cars: [],\r\n    errors: null,\r\n    loading: null,\r\n    updateCar: null,\r\n};\r\n\r\nconst getAll = createAsyncThunk(\r\n    \"carSlice/getAll\",\r\n    async (_,{rejectWithValue})=>{\r\n        try{\r\n            const {data} = await getCars.getAll();\r\n            return data\r\n        }catch (error){\r\n            rejectWithValue(error.response.data);\r\n        }\r\n\r\n    }\r\n);\r\n\r\nconst create = createAsyncThunk(\r\n    'carSlice/create',\r\n    async ({car}, thunkAPI) => {\r\n        try {\r\n            await getCars.create(car);\r\n            thunkAPI.dispatch(getAll())\r\n        } catch (e) {\r\n            return thunkAPI.rejectWithValue(e.response.data)\r\n        }\r\n\r\n    }\r\n);\r\n\r\nconst deleteById = createAsyncThunk(\r\n    'carSlice/deleteById',\r\n    async ({id}, thunkAPI) => {\r\n        try {\r\n            await getCars.deleteById(id)\r\n            thunkAPI.dispatch(getAll())\r\n        } catch (e) {\r\n            return thunkAPI.rejectWithValue(e.response.data)\r\n        }\r\n    }\r\n);\r\n\r\nconst updateById = createAsyncThunk(\r\n    'carSlice/updateById',\r\n    async ({id, car}, thunkAPI) => {\r\n        try {\r\n            await getCars.updateById(id, car);\r\n            thunkAPI.dispatch(getAll())\r\n        } catch (e) {\r\n            return thunkAPI.rejectWithValue(e.response.data)\r\n\r\n        }\r\n    }\r\n);\r\n\r\nconst carSlice = createSlice({\r\n    name: \"carSlice\",\r\n    initialState,\r\n    reducers: {\r\n        set_updateCar:(state,action)=>{\r\n            state.updateCar=action.payload\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [getAll.fulfilled]:(state,action)=>{\r\n            state.loading=false\r\n            state.posts=action.payload\r\n        },\r\n        [getAll.rejected]:(state,action)=>{\r\n            state.loading=false\r\n            state.errors=action.payload\r\n        },\r\n        [getAll.pending]:(state)=>{\r\n            state.loading=true\r\n        },\r\n\r\n    }\r\n});\r\n\r\n\r\nconst {reducer:carReducer,actions:{set_updateCar}}= carSlice;\r\n\r\nconst carActions = {getAll,set_updateCar,create,updateById,deleteById};\r\n\r\nexport{carReducer,carActions};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}