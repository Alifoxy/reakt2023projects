{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043D\\u043D\\u0430\\\\reakt2023\\\\src\\\\components\\\\Cars\\\\Cars.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Car } from \"./Car\";\nimport { carActions } from \"../../redux/slices/car_slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cars = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    cars,\n    errors,\n    loading\n  } = useSelector(state => state.cars);\n  useEffect(() => {\n    dispatch(carActions.getAll());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading, pls wait .............................\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }, this), errors && JSON.stringify(errors), cars.map(car => /*#__PURE__*/_jsxDEV(Car, {\n      car: car\n    }, car.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 30\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Cars, \"zkWHCRby3NxZRvBNTFLpXcw4GvM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Cars;\nexport { Cars };\nvar _c;\n$RefreshReg$(_c, \"Cars\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Car","carActions","Cars","dispatch","cars","errors","loading","state","getAll","JSON","stringify","map","car","id"],"sources":["C:/Users/Инна/reakt2023/src/components/Cars/Cars.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {Car} from \"./Car\";\r\nimport {carActions} from \"../../redux/slices/car_slice\";\r\n\r\nconst Cars = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {cars,errors,loading} = useSelector(state => state.cars);\r\n\r\n    useEffect(() => {\r\n        (dispatch(carActions.getAll()))\r\n    }, [dispatch]) ;\r\n\r\n    return (\r\n        <div>\r\n            {loading && <h2>Loading, pls wait .............................</h2>}\r\n            {errors && JSON.stringify(errors)}\r\n            {cars.map(car => <Car key={car.id} car={car}/>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {Cars}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AAEpD,SAAQC,GAAG,QAAO,OAAO;AACzB,SAAQC,UAAU,QAAO,8BAA8B;AAAC;AAExD,MAAMC,IAAI,GAAG,MAAM;EAAA;EAEf,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAE9B,MAAM;IAACM,IAAI;IAACC,MAAM;IAACC;EAAO,CAAC,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACH,IAAI,CAAC;EAE9DP,SAAS,CAAC,MAAM;IACXM,QAAQ,CAACF,UAAU,CAACO,MAAM,EAAE,CAAC;EAClC,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBACI;IAAA,WACKG,OAAO,iBAAI;MAAA,UAAI;IAA+C;MAAA;MAAA;MAAA;IAAA,QAAK,EACnED,MAAM,IAAII,IAAI,CAACC,SAAS,CAACL,MAAM,CAAC,EAChCD,IAAI,CAACO,GAAG,CAACC,GAAG,iBAAI,QAAC,GAAG;MAAc,GAAG,EAAEA;IAAI,GAAjBA,GAAG,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAAa,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7C;AAEd,CAAC;AAAC,GAjBIX,IAAI;EAAA,QAEWJ,WAAW,EAEEC,WAAW;AAAA;AAAA,KAJvCG,IAAI;AAmBV,SAAQA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}